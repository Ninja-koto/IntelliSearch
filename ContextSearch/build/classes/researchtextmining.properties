database.drivername=com.mysql.jdbc.Driver
database.url=jdbc:mysql://localhost:3306/contentsearch
database.username=root
#database.password=master
database.password=root


######### Articles Queries

INSERT_ARTICLE_SQL=INSERT INTO ARTICLE(ARTICLENAME,ARTICLEDESC,USN,PUBLISHER,CONTENTTYPE,ARTICLEFILE,FILENAME) VALUES(:ARTICLENAME,:ARTICLEDESC,:USN,:PUBLISHER,:CONTENTTYPE,:ARTICLEFILE,:FILENAME)

RETRIVE_REVIEWS_SQL=SELECT ARTICLEID,ARTICLENAME,ARTICLEDESC,USN FROM ARTICLE

RETRIVE_ARTICLENAMES_SQL=SELECT ARTICLENAME FROM ARTICLE

INSERT_KEYWORDLIST_SQL=INSERT INTO KEYWORDLIST(ARTICLENAME,KEYWORD)VALUES(:ARTICLENAME,:KEYWORD)

INSERT_AUTHOR_LIST_SQL=INSERT INTO AUTHORLIST(ARTICLENAME,AUTHORNAME)VALUES(:ARTICLENAME,:AUTHORNAME)

RETRIVE_ALL_ARTICLES_SQL =SELECT ARTICLEID,ARTICLENAME,ARTICLEDESC,USN,PUBLISHER,CONTENTTYPE,ARTICLEFILE,FILENAME FROM ARTICLE

RETRIVE_ALL_ARTICLES_WHERE_USN_SQL=SELECT ARTICLEID,ARTICLENAME,ARTICLEDESC,USN,PUBLISHER,CONTENTTYPE,ARTICLEFILE,FILENAME FROM ARTICLE WHERE USN=:USN

RETRIVE_ARTICLE_FOR_ARTICLENAME_SQL=SELECT ARTICLEID,ARTICLENAME,ARTICLEDESC,USN,PUBLISHER,CONTENTTYPE,ARTICLEFILE,FILENAME,USN FROM ARTICLE WHERE ARTICLENAME=:ARTICLENAME

RETRIVE_KEYWORDS_WHERE_ARTICLENAME_SQL=SELECT ARTICLENAME,KEYWORD FROM KEYWORDLIST WHERE ARTICLENAME=:ARTICLENAME

RETRIVE_AUTHORS_WHERE_ARTICLENAME_SQL=SELECT AUTHORNAME FROM AUTHORLIST WHERE ARTICLENAME=:ARTICLENAME


############# Stopwords Queries

INSERT_STOPWORD_SQL=INSERT INTO STOPWORDS(STOPWORD) VALUES(?)

RETRIVE_STOPWORDS_FULL_SQL=SELECT STOPWORDID,STOPWORD FROM STOPWORDS

RETRIVE_STOPWORDS_SQL=SELECT STOPWORD FROM STOPWORDS

REMOVE_STOPWORD_SQL=DELETE FROM STOPWORDS WHERE STOPWORD=?

################ Cleaning Articles

RETRIVE_ALLCLEAN_ARTICLES_SQL=SELECT CLEANID,CLEANARTICLE,ARTICLENAME FROM CLEANARTICLES

DELETE_ALL_CLEAN_ARTICLES_SQL=DELETE FROM CLEANARTICLES

INSERT_CLEANDETAILS_SQL=INSERT INTO CLEANARTICLES(ARTICLENAME,CLEANARTICLE) VALUES(:ARTICLENAME,:CLEANARTICLE)

RETRIVE_ALLCLEAN_ARTICLES_FOR_ARTICLENAME_SQL=SELECT CLEANID,CLEANARTICLE,ARTICLENAME FROM CLEANARTICLES WHERE ARTICLENAME=:ARTICLENAME

################### Tokenization

DELETE_ALLTOKENS_SQL=DELETE FROM TOKENS

RETRIVE_ALLTOKENS_SQL=SELECT TOKENID,TOKENNAME,ARTICLENAME FROM TOKENS

INSERT_TOKENS_SQL=INSERT INTO TOKENS(TOKENNAME,ARTICLENAME) VALUES(:TOKENNAME,:ARTICLENAME)

RETRIVE_ALLTOKENS_WHERE_ARTICLENAME_SQL=SELECT TOKENID,TOKENNAME,ARTICLENAME FROM TOKENS WHERE ARTICLENAME=:ARTICLENAME

RETRIVE_DINSTINCT_TOKENNAMES_FROM_FREQ_WHERE_ARTICLENAME_SQL=SELECT DISTINCT TOKENNAME FROM TOKENS WHERE ARTICLENAME=:ARTICLENAME

RETRIVE_COUNT_FOR_TOKEN_WHERE_TOKENNAME_SQL=SELECT DISTINCT ARTICLENAME FROM FREQUENCY WHERE TOKENNAME=:tokenName

RETRIVE_FREVO_FOR_ARTICLENAME_TOKENNAME_SQL_FROM_FREQ=SELECT FREQID,TOKENNAME,FREQ,ARTICLENAME FROM frequency WHERE ARTICLENAME=:articleName AND TOKENNAME=:tokenName


##################### Frequency Computation

DELETE_ALL_FREQ_SQL=DELETE FROM freqcomputation

RETRIVE_TYPES_ONLY_SQL=SELECT TYPE FROM types


INSERT_FREQCOMPUTATION_SQL=INSERT INTO frequency(ARTICLENAME,FREQ,TOKENNAME)VALUES(:ARTICLENAME,:FREQ,:TOKENNAME)

RETRIVE_FREQCOMPUTATION_SQL=SELECT FREQID,ARTICLENAME,FREQ,TOKENNAME FROM frequency

RETRIVE_DINSTINCT_TOKENS_FOR_ARTICLENAME_SQL=SELECT DISTINCT TOKENNAME FROM tokens WHERE ARTICLENAME=:ARTICLENAME


SELECT_COUNT_FOR_TOKENNAME_ARTICLENAME_SQL=SELECT COUNT(*) AS COUNTER FROM tokens WHERE TOKENNAME=:TOKENNAME AND ARTICLENAME=:ARTICLENAME

SELECT_COUNT_FOR_ARTICLENAME_SQL=SELECT COUNT(*) AS COUNTER FROM tokens  WHERE ARTICLENAME=:ARTICLENAME


RETRIVE_FREQCOMPUTATION_WHERE_ARTICLENAME_SQL=SELECT FREQID,ARTICLENAME,SENTENCEID,FREQKEYPHARSE,TYPE,FREQPHRASE,FREQSTRUCTURE3,FREQADJECTIVE,FREQPHRASEG,FREQSTRUCTURE1,FREQSTRUCTURE2 FROM freqcomputation WHERE ARTICLENAME=:ARTICLENAME

RETRIVE_FV_COMPUTATION_SQL=SELECT FEATUREVECTORID,ARTICLENAME,FREQ,TOKENNAME,IDFT,NOOFDOCS,FEATUREVECTOR FROM FEATUREVECTORS

###################### Insert Feature Vector

INSERT_FEATUREVO_SQL=INSERT INTO FEATUREVECTORS(FREQ,TOKENNAME,NOOFDOCS,IDFT,FEATUREVECTOR,ARTICLENAME) VALUES(:FREQ,:TOKENNAME,:NOOFDOCS,:IDFT,:FEATUREVECTOR,:ARTICLENAME)



############# Login and Article Save

RETRIVE_REGISTER_USERIDS_SQL=SELECT USN FROM LOGIN

INSERT_LOGIN_SQL=INSERT INTO LOGIN(NAME,PASSWORD,EMAIL,GENDER,USN,DEGREE,SPECIFICATION,LOGINTYPE,ADDRESS,CITY,STATE,PINCODE,FATHERNAME,FATHERNUMBER,MOTHERNAME,MOTHERNUMBER,FATHEREMAILID,MOTHERMAILID,LOCALGUARDIANMAIL,LOCALGUARDIANNAME,LOCALGUARDIANNUMBER,ADMISSIONTYPE,CHALLANNUMBER,FEEPAID,RESIDENTIALADDRESS,RESIDENTIALSTATUS,SEMESTERMARKS,COLLEGE,DEPARTMENT)VALUES(:NAME,:PASSWORD,:EMAIL,:GENDER,:USN,:DEGREE,:SPECIFICATION,:LOGINTYPE,:ADDRESS,:CITY,:STATE,:PINCODE,:FATHERNAME,:FATHERNUMBER,:MOTHERNAME,:MOTHERNUMBER,:FATHEREMAILID,:MOTHERMAILID,:LOCALGUARDIANMAIL,:LOCALGUARDIANNAME,:LOCALGUARDIANNUMBER,:ADMISSIONTYPE,:CHALLANNUMBER,:FEEPAID,:RESIDENTIALADDRESS,:RESIDENTIALSTATUS,:SEMESTERMARKS,:COLLEGE,:DEPARTMENT)

INSERT_ACTIVITY_SQL=INSERT INTO EXTRAACTIVITY(ACTIVITYNAME,LOGINID) VALUES(:ACTIVITYNAME,:LOGINID)

INSERT_SUBJECT_SQL=INSERT INTO SUBJECTS(SUBJECTNAME,LOGINID) VALUES(:SUBJECTNAME,:LOGINID)

RETRIVE_PASSWORD_WHERE_USERID_SQL=SELECT PASSWORD FROM LOGIN WHERE USN=?

RETRIVE_LOGINTYPE_WHERE_USERID_SQL=SELECT LOGINTYPE FROM LOGIN WHERE USN=?


############# Frequency Computation SQL
RETRIVE_UNIQUE_ARTICLENAMES=SELECT DISTINCT ARTICLENAME FROM TOKENS

RETRIVE_DISTINCTTOKENS_WHERE_ARTICLENAME_SQL=SELECT DISTINCT TOKENNAME FROM TOKENS WHERE ARTICLENAME=?

RETRIVE_COUNT_WHERE_TOKENNAME_AND_ARTICLENAME_SQL=SELECT COUNT(TOKENNAME)AS NOOFRECORDS FROM TOKENS WHERE TOKENNAME=? AND ARTICLENAME=?

INSERT_FREQUENCY_SQL=INSERT INTO FREQUENCY(ARTICLENAME,TOKENNAME,FREQ) VALUES(?,?,?)

RETRIVE_DINSTINCT_ARTICLENAMES_FROM_FV_SQL=SELECT DISTINCT ARTICLENAME FROM FREQUENCY

RETRIVE_DINSTINCT_ARTICLENAMES_FROM_FREQ_SQL=SELECT DISTINCT ARTICLENAME FROM FREQUENCY

###########

RETRIVE_DINSTINCT_ARTICLENAMES_FROM_FV_SQL=SELECT DISTINCT ARTICLENAME FROM FEATUREVECTORS

########### Log Likelihood
RETRIVE_UNIQUE_ARTICLENAMES_SQL=SELECT DISTINCT ARTICLENAME FROM FREQUENCY

RETRIVE_UNIQUE_TOKENS_FROM_FREQ_WHERE_ARTICLENAME_SQL=SELECT DISTINCT TOKENNAME FROM FREQUENCY  WHERE ARTICLENAME=:articleName

RETRIVE_UNIQUE_FREQINFO_FROM_FREQ_WHERE_ARTICLENAME_SQL=SELECT DISTINCT TOKENNAME,FREQ FROM  FREQUENCY WHERE ARTICLENAME=:articleName

RETRIVE_COUNTOTHERS_WHERE_TOKENNAME_AND_ARTICLENAME_SQL=SELECT SUM(FREQ) FROM  FREQUENCY WHERE TOKENNAME !=? AND ARTICLENAME=?

RETRIVE_COUNTALL_WHERE_ARTICLENAME_SQL=SELECT SUM(FREQ) FROM  FREQUENCY WHERE ARTICLENAME=?

RETRIVE_FREQ_WHERE_ARTICLENAME_SQL=SELECT FREQ FROM FREQUENCY WHERE ARTICLENAME=:articleName AND TOKENNAME!=:tokenName

INSERT_LOGLIKELIHOOD_SQL=INSERT INTO loglikelihood(LOGLIKELIHOODV,EXPECTEDFREQUENCY,FREQ,TOKENNAME,ARTICLENAME) VALUES(:logLikelihood,:expectedFrequency,:freq,:tokenName,:articleName)

RETRIVE_LOGLIKELIHOOD_FULL_SQL=SELECT LOGLIKELIHOODID,LOGLIKELIHOODV,EXPECTEDFREQUENCY,FREQ,TOKENNAME,ARTICLENAME FROM loglikelihood

DELETE_LOGLIKELIHOOD_SQL=DELETE FROM loglikelihood

RETRIVE_DINSTINCT_TOKENS_FOR_ARTICLENAME_FROM_LOGLIKELIHOOD_SQL=SELECT DISTINCT TOKENNAME FROM loglikelihood WHERE ARTICLENAME=:articleName

RETRIVE_FREQ_FROM_LOGLIKELIHOOD_WHERE_ARTICLENAME_SQL=SELECT FREQ FROM loglikelihood WHERE ARTICLENAME=:articleName

INSERT_COMPAREARTICLE_SQL=INSERT INTO COMPAREARTICLE(ACCURARYPREVIOUS,ACCURACYPROPOSED,TIMETAKENPREVIOUS,TIMETAKENPROPOSED)VALUES(?,?,?,?)

RETRIVE_FREQ_FROM_LOGLIKELIHOOD_WHERE_ARTICLENAME_AND_KEYPHRASE_SQL=SELECT FREQ FROM loglikelihood WHERE ARTICLENAME=:articleName AND TOKENNAME IN(:tokenName)

DELETE_FROM_GROUPINFO_SQL=DELETE FROM groupinfo;

RETRIVE_UNIQUE_ARTICLENAMES_FROM_LOGLIKELIHOOD_SQL=SELECT DISTINCT ARTICLENAME FROM loglikelihood

RETRIVE_GROUPID_FROM_DUPLICATEBUG_WHERE_ARTICLENAME_SQL=SELECT GROUPID FROM groupinfo WHERE MAINARTICLENAME=:articleName AND GROUPID>:groupID

INSERT_DUPLICATEARTICLE_SQL=INSERT INTO groupinfo(ARTICLENAME,MAINARTICLENAME,USN,EMAIL,RVCOEFFCIENT,THRESHOLD,SIMILARITY,GROUPID,ARTICLEIDPARENT,ARTICLEIDCHILD)VALUES(?,?,?,?,?,?,?,?,?,?)


RETRIVE_ALLLOGIN_SQL=SELECT USN,EMAIL FROM login

RETRIVE_GROUPINGVIEW_SQL=SELECT ARTICLENAME,MAINARTICLENAME,USN,EMAIL,RVCOEFFCIENT,THRESHOLD,SIMILARITY,GROUPID,ARTICLEIDPARENT,ARTICLEIDCHILD FROM groupinfo

RETRIVE_LOGLIKELIHOOD_FULL_ORDERBY_SQL=SELECT DISTINCT LOGLIKELIHOODV,EXPECTEDFREQUENCY,FREQ,TOKENNAME,ARTICLENAME FROM loglikelihood  WHERE LOGLIKELIHOODV>? ORDER BY LOGLIKELIHOODV DESC

RETRIVE_COMPARISION_FULL_SQL=SELECT ACCURARYPREVIOUS,ACCURACYPROPOSED,TIMETAKENPREVIOUS,TIMETAKENPROPOSED FROM comparearticle


########### Feature Vectors

RETRIVE_FV_FOR_ARTICLENAME_TOKEN_SQL=SELECT FEATUREVECTOR FROM FEATUREVECTORS WHERE ARTICLENAME=:ARTICLENAME AND TOKENNAME=:TOKENNAME

INSERT_BESTFV_SQL=INSERT INTO BESTFV(FEATUREVECTOR,ARTICLENAME) VALUES(:FEATUREVECTOR,:ARTICLENAME)

RANK_BESTFV_SQL=SELECT FEATUREVECTOR,ARTICLENAME FROM BESTFV WHERE FEATUREVECTOR> 0 ORDER BY FEATUREVECTOR DESC

DELETE_FROM_BESTFV_SQL=DELETE FROM BESTFV

RETRIVE_FREQ_FROM_LOGLIKELIHOOD_WHERE_ARTICLENAME_AND_WORDSIN_SQL=SELECT FREQ FROM loglikelihood WHERE ARTICLENAME=:articleName AND TOKENNAME IN(:words)


RETRIVE_FREQ_FROM_FREQ_WHERE_ARTICLENAME_AND_TOKENNAME_SQL =SELECT FREQ FROM FREQUENCY WHERE ARTICLENAME=:articleName AND TOKENNAME IN(:words)

RETRIVE_ARTICLE_FOR_ARTICLEID_SQL=SELECT ARTICLEID,ARTICLENAME,ARTICLEDESC,USN,PUBLISHER,CONTENTTYPE,ARTICLEFILE,FILENAME,USN FROM ARTICLE WHERE ARTICLEID=:ARTICLEID

RETRIVE_ARTICLEID_FOR_ARTICLENAME_SQL=SELECT ARTICLEID FROM ARTICLE WHERE ARTICLENAME=:ARTICLENAME 


RETRIVE_UNIQUE_ARTICLENAMES_FOR_AUTHORS_IN_SQL=SELECT DISTINCT ARTICLENAME FROM AUTHORLIST WHERE AUTHORNAME IN(:AUTHORNAME)

RETRIVE_UNIQUE_ARTICLENAMES_FOR_KEYWORDS_IN_SQL=SELECT DISTINCT ARTICLENAME FROM KEYWORDLIST WHERE KEYWORD IN(:KEYWORD)

RETRIVE_UNIQUE_ARTICLENAMES_FOR_PUBLISHERS_IN_SQL=SELECT DISTINCT ARTICLENAME FROM ARTICLE WHERE PUBLISHER IN(:PUBLISHER)